#This file is loaded by NIDPLocalConfig.NIDP_CONFIG enum

# IS RELOAD represents a boolean value
# It signifies if this config file needs to be reloaded at run time or not
# A false will imply that Reload will never happen dynamically, but will happen
# during application restarts
IS_RELOAD = false
# Reload Interval represents the minimum interval or refresh time for re-loading this file into memory
# CHANGING its value will require an APPLICATION RESTART
# Value is in milliseconds
RELOAD_INTERVAL = 900000


#--------------APPLICATION RESTART NOT REQUIRED IF BELOW VALUES ARE MODIFIED----------------------#
#--------------HOWEVER, IS_RELOAD SHOULD BE TRUE FOR THIS TO HAPPEN ------------------------------#
#--------------IN ADDITION, NEED TO WAIT FOR NEXT RELOAD INTERVAL EXPIRY FOR CHANGES TO BE APPLIED ----#

# Define the default TLS version that is used for outgoing connections from IDP
# Possible candidates are TLS, TLSv1, TLSv1.1, TLSv1.2
#DEFAULT_TLS_VERSION = TLSv1.1

# Define the fallback TLS version to use if the TLS version defined above fails.
# This should be used only for cases where the default above has been changed, and is set 
# to something other than "TLS".
# Most commonly used when the default has been changed to a higher version like TLSv1.1 or TLSv1.2. With
# the higher protocol setting, connection to a server may fail because the server may not support the new
# TLS version. When that occurs, the Identity server will use the TLS version defined below to retry the 
# connection  
#FALLBACK_TLS_VERSION = TLS

# ------------- START OF SAML2 POST COMPRESSION CONFIGURATION -------------------------------------------#

# This variable lists the Trusted Provider names/metadata URIs/Provider_ID, which understand DEFLATED SAML2 POST MESSAGES
# 	-	'This' provider will send SAML2 POST messages in deflated format to the Trusted Provider if latter is found in the list.
#	-	'This' provider will send SAML2 POST messages in non-deflated format to the Trusted Provider if latter is not found in the list.
# NOTE - Multiple trusted provider_ids can be specified in a comma separated format
# EXAMPLE - POST_DEFLATE_TRUSTEDPROVIDERS = http://host:port/fed/sp,http://host/adfs/services/trust
SAML2_POST_DEFLATE_TRUSTEDPROVIDERS = http://host:port/fed/sp

# This key is a global flag
# This key represents a boolean value
# if true, 'this' provider will inflate  all the incoming SAML2 POST messages (even if they have not been deflated,
# by the Trusted Providers)
#	NOTE - Errors will occur if deflated messages received from a TrustedProvider are not inflated.
#		e.g. If a Trusted Provider sends a deflated SAML2 POST message, & 
#				that message is received by 'this' provider with IS_SAML2_POST_INFLATE set to false.
#	However, scenarios which tries to inflate non-deflated messages will be handled.
IS_SAML2_POST_INFLATE = false

# ------------- END OF SAML2 POST COMPRESSION CONFIGURATION -------------------------------------------#

# ------------- START OF SAML2 POST SIGN RESPONSE CONFIGURATION -------------------------------------------#

# This will sign the SAML2 POST Response e.g. <samlp:Response> for SAML2 POST binding
# This is a global boolean flag, 
#	-	when set to true will sign the SAML2 POST Responses before SENDING to any trusted provider
#   -	when set to true will validate the signature of all INCOMING SAML2 POST Responses, irrespective of any trusted provider
# This flag caters to the requirement when
#	- 'This' provider needs to SEND signed SAML2 POST Response messages to all trusted providers.
#	- In other words 'this' provider is the IDP to all the trusted providers.
# It is not required to set the value to 'true' if:
#	-	'This' provider acts ONLY as a RECEIVER of signed SAML2 POST Responses from any trusted provider.
#	-	EXAMPLE: If any 'trusted provider' sends a signed SAML2 POST Response, it will be RECEIVED here successfully (i.e. by 'this' provider) 
#			with the flag set to 'false'. OfCourse, things will not work in this setting if 'this' provider is expected to SEND
#			signed SAML2 POST Response. 
# The preferred value is false.
IS_SAML2_POST_SIGN_RESPONSE=false

# This will sign the SAML2 POST Response e.g. <samlp:Response> for SAML2 POST binding
# This is a variable that lists trusted provider id(s).
# 	-	This will sign the SAML2 POST Response before sending to the trusted provider if the trusted provider is found in the list
# 	-	This will validate the SAML2 POST Response after receiving from the trusted provider if the trusted provider is found in the list
# This variable caters to the requirement when
#	- 'This' provider needs to SEND signed SAML2 POST Response messages to the trusted provider which can accept/want signed messages only.
#	- In other words 'this' provider is the IDP to the trusted provider.
# It is not required to have the 'trusted provider' id in this list if:
#	-	'This' provider acts ONLY as a RECEIVER of signed SAML2 POST Responses from the 'trusted provider'.
#	-	EXAMPLE: If any 'trusted provider' sends a signed SAML2 POST Response, it will be RECEIVED here successfully (i.e. by 'this' provider) 
#			without even having the 'trusted provider' added to this list.OfCourse, things will not work in this setting if 'this' provider is 
#			expected to SEND signed SAML2 POST Response to the 'trusted provider'.
# This variable can accept one or more Trusted Service Providers
# This variable will accept multiple trusted Provider_IDs in a comma separated format
# IMPORTANT - This variable will be invalid for use if IS_SAML2_POST_SIGN_RESPONSE is true
# This variable should be preferred than 'IS_SAML2_POST_SIGN_RESPONSE' flag.
SAML2_POST_SIGN_RESPONSE_TRUSTEDPROVIDERS = http://host:port/fed/sp

# ------------- END OF SAML2 POST SIGN RESPONSE CONFIGURATION -------------------------------------------#

# ------------- START OF DISPLAY AUTH DONE PAGE CONFIGURATION -------------------------------------------#
# After the IDP/ESP authentication process, the user-agent is redirected back to their originally 
# requested URL through a series of HTTP 302 redirects. The originally requested URL is then retrieved by the 
# proxy which can often be a lengthy process as this resource will often require a SSO and authentication
# process of its own.
# To unsophisticated customers(end users) it is not clear how long the NAM authentication takes and how 
# long the origin server request and authentication process takes. The perception is often that the 
# entire process is due to the NAM authentication time.
# By enabling this setting, on the final ESP redirect back to the originally requested URL, instead of a 
# 302 redirect a HTML page with a message "Authentication successful, please wait while your requested page 
# loads..." will be displayed for a brief while before the user is redirected to the requested URL.
IS_DISPLAY_AUTH_DONE_PAGE = false
# ------------- END OF DISPLAY AUTH DONE PAGE CONFIGURATION ---------------------------------------------#

# ------------- START OF WSTRUST STS ACTAS/ONBEHALFOF AUTHORIZATION CONFIGURATION -------------------------#

#This key provides values for a STS (WS-Trust) ActAs authorization based policy. Values are comma-separated. Default policy evaluates the result based on username.
#WSTRUST_AUTHORIZATION_ALLOWED_ACTAS_VALUES = testuser1,admin

#This key provides values for a STS (WS-Trust) OnBehalfOf authorization based policy. Values are comma separated. Default policy evaluates the result based on username.
#WSTRUST_AUTHORIZATION_ALLOWED_ONBEHALF_VALUES = testuser1,admin

#This key is used in performing a STS (WS-Trust) OnBehalfOf/ActAs authorization by using custom implementation.
WSTRUST_AUTHORIZATION_CLASS = nl.idfocus.nam.authorization.wstrust.IdpRoles
WSTRUST_AUTHORIZATION_ROLE_ACTAS = 
WSTRUST_AUTHORIZATION_ROLE_ONBEHALFOF = 

#This key is set to perform a STS (WS-Trust) ActAs/OnBehalfOf (both) authorization by using comma-separated values.
#If specific keys WSTRUST_AUTHORIZATION_ALLOWED_ACTAS_VALUES and WSTRUST_AUTHORIZATION_ALLOWED_ONBEHALF_VALUES are set, the following parameter will be ignored: 
#WSTRUST_AUTHORIZATION_ALLOWED_VALUES = testuser1,admin

# ------------- END OF WSTRUST STS ACTAS/ONBEHALFOF AUTHORIZATION CONFIGURATION ---------------------------#


# ------------- START OF OFFICE 365 MULTI DOMAIN SUPPORT CONFIGURATION -------------------------#

#This key enables multi domain support and domain specific token output changes are done automatically.
#STS_OFFICE365_MULTI_DOMAIN_SUPPORT_AUTO = true

#This key provides values for a STS token issuer modification per SP, format will be SPentityID:UPNDomain -> new IssuerID
#STS_CHANGE_ISSUER = urn:federation:MicrosoftOnline:nam4test.com -> https://nam4test.com/nidp/wsfed/

# ------------- END OF OFFICE365 MULTI DOMAIN SUPPORT CONFIGURATION ---------------------------#


#--------------------- RISK Analytics Configuration -------------------------------------------#
#com.microfocus.nam.risk.analytics.enabled=true
#com.microfocus.nam.risk.analytics.host=164.99.175.166
#com.microfocus.nam.risk.analytics.port=1468
#--------------------- End RISK Analytics Configuration -------------------------------------------#